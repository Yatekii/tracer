// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Dart bindings to call mylib functions
class GreeterBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  GreeterBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  GreeterBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Int8> rust_greeting(
    ffi.Pointer<ffi.Int8> to,
  ) {
    return _rust_greeting(
      to,
    );
  }

  late final _rust_greeting_ptr =
      _lookup<ffi.NativeFunction<_c_rust_greeting>>('rust_greeting');
  late final _dart_rust_greeting _rust_greeting =
      _rust_greeting_ptr.asFunction<_dart_rust_greeting>();

  void rust_cstr_free(
    ffi.Pointer<ffi.Int8> s,
  ) {
    return _rust_cstr_free(
      s,
    );
  }

  late final _rust_cstr_free_ptr =
      _lookup<ffi.NativeFunction<_c_rust_cstr_free>>('rust_cstr_free');
  late final _dart_rust_cstr_free _rust_cstr_free =
      _rust_cstr_free_ptr.asFunction<_dart_rust_cstr_free>();

  int create() {
    return _create();
  }

  late final _create_ptr = _lookup<ffi.NativeFunction<_c_create>>('create');
  late final _dart_create _create = _create_ptr.asFunction<_dart_create>();

  void poll(
    int handle,
  ) {
    return _poll(
      handle,
    );
  }

  late final _poll_ptr = _lookup<ffi.NativeFunction<_c_poll>>('poll');
  late final _dart_poll _poll = _poll_ptr.asFunction<_dart_poll>();

  ffi.Pointer<Interval> events(
    int handle,
  ) {
    return _events(
      handle,
    );
  }

  late final _events_ptr = _lookup<ffi.NativeFunction<_c_events>>('events');
  late final _dart_events _events = _events_ptr.asFunction<_dart_events>();
}

class Interval extends ffi.Struct {
  @ffi.Int32()
  external int start;

  @ffi.Int32()
  external int end;

  @ffi.Int32()
  external int isr;
}

typedef _c_rust_greeting = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> to,
);

typedef _dart_rust_greeting = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> to,
);

typedef _c_rust_cstr_free = ffi.Void Function(
  ffi.Pointer<ffi.Int8> s,
);

typedef _dart_rust_cstr_free = void Function(
  ffi.Pointer<ffi.Int8> s,
);

typedef _c_create = ffi.Int32 Function();

typedef _dart_create = int Function();

typedef _c_poll = ffi.Void Function(
  ffi.Int32 handle,
);

typedef _dart_poll = void Function(
  int handle,
);

typedef _c_events = ffi.Pointer<Interval> Function(
  ffi.Int32 handle,
);

typedef _dart_events = ffi.Pointer<Interval> Function(
  int handle,
);
